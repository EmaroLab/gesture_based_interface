Installation:

Installing ROS (Here we have used kinetic) and all the Baxter SDK dependencies following as explained at this link:
http://sdk.rethinkrobotics.com/wiki/Workstation_Setup


You may want to install MoveIt! to move Baxter easily :
http://sdk.rethinkrobotics.com/wiki/MoveIt_Tutorial


Once you have installed everything write in the terminal:

./baxter.sh baxter_series_number

If you want to use baxter in a simulated environment instead write this:
./baxter.sh sim

Start all necessary nodes :
roslaunch baxter_gazebo baxter_world.launch







Run simulator for baxter :
roslaunch baxter_gazebo baxter_world.launch


Package Name: baxter_pbr

There is a node, pbr_server.py which is used to provide services like : playback, record


---PLAYBACK
Service "playback" takes as parameter the filename and the number of loops (Defined in Playback.srv) and play the animations for "loops" times.

---RECORD
Service "record" takes as parameter the filename that you will create and the rate (100 usually) and creates a new node (in the terminal we will have a node inside another one) in this way, we will stop the inner node but the server will continue to run !
Registered file are stored in the catkin_ws folder (for now --> we will have a dedicated folder for the records).

--- PLAYBACK AND RECORD TAKES AS INPUT THE NAME OF THE FILE, THEN ADD THE PATH ---
The body of these functions have just been copied from the package "baxter_examples" where you have the possibility to record or play a movement



---LIST FILES
Return the number of files and the list of the entire recorded file's names




TODO:

1)
Instead of creating a node inside another one we can do something like this:

Client calls for the record service.

Server takes the request and send a command, change a variable to the joint_record node

Then in the server you enter a stop command and then the joint_record node is stopped, but not with SIG_INT, we will make it in a pause state, without creating a new node every time.

So we will use a roslaunch (add things to the one used for the simulator (first line of this file) and add the server_pbr and the joint_record

2) if rate or number of loops are not defined -> use default values
